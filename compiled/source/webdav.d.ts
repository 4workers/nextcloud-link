/// <reference types="node" />
import * as Stream from "stream";
import { ConnectionOptions, FileDetails } from "./types";
declare function rawGetReadStream(sanePath: string): Promise<Stream.Readable>;
declare function rawRemove(sanePath: string): Promise<void>;
declare function rawExists(sanePath: string): Promise<boolean>;
declare function rawPut(sanePath: string, content: string): Promise<void>;
declare function rawGet(sanePath: string): Promise<string>;
declare function rawGetFiles(sanePath: string): Promise<string[]>;
declare function rawGetFolderFileDetails(sanePath: string): Promise<FileDetails[]>;
declare function rawRename(saneFrom: string, newName: string): Promise<void>;
declare function rawMove(saneFrom: string, toPath: string): Promise<void>;
declare function rawGetWriteStream(sanePath: string): Promise<Stream.Writable>;
declare function rawTouchFolder(sanePath: string): Promise<void>;
declare function rawCreateFolderHierarchy(sanePath: string): Promise<void>;
export declare function configureWebdavConnection(options: ConnectionOptions): void;
export declare function checkConnectivity(): Promise<boolean>;
declare function rawPipeStream(sanePath: string, stream: Stream): Promise<void>;
export declare const createFolderHierarchy: typeof rawCreateFolderHierarchy;
export declare const getFolderFileDetails: typeof rawGetFolderFileDetails;
export declare const getWriteStream: typeof rawGetWriteStream;
export declare const getReadStream: typeof rawGetReadStream;
export declare const touchFolder: typeof rawTouchFolder;
export declare const pipeStream: typeof rawPipeStream;
export declare const getFiles: typeof rawGetFiles;
export declare const rename: typeof rawRename;
export declare const remove: typeof rawRemove;
export declare const move: typeof rawMove;
export declare const exists: typeof rawExists;
export declare const put: typeof rawPut;
export declare const get: typeof rawGet;
export {};
